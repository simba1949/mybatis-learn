<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 配置 Mapper.xml 对应的接口全限定名 -->
<mapper namespace="vip.openpark.advanced.search.mapper.OneToManyUserDOMapper">
    <!-- 通过 resultMap 标签的子标签 collection 配置 -->
    <resultMap id="oneXml" type="vip.openpark.advanced.search.domain.OneToManyUserDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <!-- 此处注意：集合中的对象使用 ofType="" 不是 javaType="" -->
        <collection columnPrefix="role_"
                    property="oneToManyRoleDOList"
                    ofType="vip.openpark.advanced.search.domain.OneToManyRoleDO">
            <id column="id" jdbcType="BIGINT" property="id"/>
            <result column="code" jdbcType="VARCHAR" property="code"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
        </collection>
    </resultMap>
    <select id="selectWithOneXml" resultMap="oneXml">
        SELECT u.id,
               u.code,
               u.username,
               u.real_name,
               u.nick_name,
               u.password,
               r.id   role_id,
               r.code role_code,
               r.name role_name
        FROM user u
                 left join user_role ur on u.id = ur.user_id
                 left join role r on ur.role_id = r.id
    </select>


    <!-- 通过 resultMap 标签的子标签 collection 配置 -->
    <resultMap id="manyXml" type="vip.openpark.advanced.search.domain.OneToManyUserDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <!--此处注意：
            1.集合中的对象使用 ofType="" 不是 javaType="",
            2.这里的 resultMap 是 mybatis 自动添加的命名空间，加上resultMap.id 可以获取 resultMap -->
        <collection columnPrefix="role_"
                    property="oneToManyRoleDOList"
                    ofType="vip.openpark.advanced.search.domain.OneToManyRoleDO"
                    resultMap="vip.openpark.advanced.search.mapper.OneToManyRoleDOMapper.all"/>
    </resultMap>
    <select id="selectWithManyXml" resultMap="manyXml">
        SELECT u.id,
               u.code,
               u.username,
               u.real_name,
               u.nick_name,
               u.password,
               r.id   role_id,
               r.code role_code,
               r.name role_name
        FROM user u
                 left join user_role ur on u.id = ur.user_id
                 left join role r on ur.role_id = r.id
    </select>

</mapper>